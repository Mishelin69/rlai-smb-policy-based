have multilple streams on diff threads
on the main thread complete the same calculations as the other threads
and wait for all the streams to finish then pick prediction
so basically pseudo code:

//main thread

for stream in streams:
    job(..., stream)

main_thread_job

for stream in streams:
    cudaStreamSynchronize(stream)

//now pick actions and stuff thats why its separate :)

====================NEW STRATEGY====================
Okay so new strategy, have each request concurently process
each network the output and calculate V(t) and work on the discount 
gradually and then just perform updates (ofc sum up the clipped 
surrogates and stuff but you get it, do the last at the end
theyll still be some stuff to do [weight updates]) to reduce the lag D:
